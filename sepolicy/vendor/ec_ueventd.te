# Policy for Asus SP HAL service
type ec_ueventd, domain;
type ec_ueventd_exec, exec_type, vendor_file_type, file_type;

# Started by init
init_daemon_domain(ec_ueventd)

allow ec_ueventd init:unix_stream_socket { connectto };
allow ec_ueventd vendor_shell_exec:file { read getattr entrypoint };
allow ec_ueventd sysfs_leds:dir { search };
allow ec_ueventd sysfs_leds:lnk_file { read };
allow ec_ueventd factory_file:file { read open };
allow ec_ueventd factory_file:dir { search };
allow ec_ueventd sysfs:file { read write create open };
allow ec_ueventd ec_ueventd:capability { sys_module };
allow ec_ueventd vendor_toolbox_exec:file { execute_no_trans };
allow ec_ueventd vendor_file:system { module_load };
allow ec_ueventd kernel:key { search };
allow ec_ueventd kmsg_device:chr_file { write open };
allow ec_ueventd property_socket:sock_file { write };
allow ec_ueventd init:unix_stream_socket { connectto };
allow ec_ueventd proc:file { create };
allow ec_ueventd vendor_sysfs_usbpd_device:dir { ioctl read getattr lock open watch watch_reads search };
allow ec_ueventd vendor_sysfs_usbpd_device:file { ioctl read getattr lock map open watch watch_reads };
allow ec_ueventd ctl_default_prop:property_service { set };
allow ec_ueventd asus_dongle_prop:file { read getattr open };
allow ec_ueventd self:netlink_kobject_uevent_socket { read create bind setopt };
allow ec_ueventd socket_device:dir { write lock open add_name remove_name search };
allow ec_ueventd ec_ueventd_exec:file { read getattr execute entrypoint };
allow ec_ueventd vendor_sysfs_graphics:file { read write create open };
allow ec_ueventd vendor_sysfs_graphics:dir { search };
allow ec_ueventd ec_ueventd:netlink_kobject_uevent_socket { getopt };

set_prop(ec_ueventd, asus_dongle_prop)
